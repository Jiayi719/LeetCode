思路：递归求解，坑很多，要特别小心
首先，要注意当x=0时，n必须为正数
然后，要注意当n<0时，-n可能会溢出（当INT_MIN=-2147483648，INT_MAX=2147483647时，如n=-2147483648，则-n=2147483648），此时
可以利用x^n = x^(-1) * x^(n+1)求解

class Solution {
public:
    double myPow(double x, int n) {
        if(x == 0.0 && n <= 0)
            return 0.0;
        
        unsigned int abs_n = (unsigned int)(n);
        if(n < 0)
            abs_n = (unsigned int)(-(n+1));
        
        double result = myPowWithUnsigned(x, abs_n);
        if(n < 0)
            result = 1.0 / (result * x);
        
        return result;
    }
    
    double myPowWithUnsigned(double x, unsigned int n) {
        if(n == 0)
            return 1.0;
        if(n == 1)
            return x;
        
        double result = myPowWithUnsigned(x, n >> 1);
        result *= result;
        if(n & 0x1 == 1)
            result *= x;
        
        return result;
    }   
};

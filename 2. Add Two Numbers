思路：逐位相加，注意处理进位的情况
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(l1 == nullptr)
            return l2;
        if(l2 == nullptr)
            return l1;
        
        int val1 = l1->val;
        int val2 = l2->val;
        int carry = 0;
        int sum = val1 + val2 + carry;
        if(sum > 9) {
                carry = 1;
                sum -= 10;
            }
            else
                carry = 0;
        
        ListNode* l3 = new ListNode(sum);
        
        ListNode* node1 = l1->next;
        ListNode* node2 = l2->next;
        ListNode* node3 = l3;
        while(node1 != nullptr || node2 != nullptr || carry) {
            val1 = node1 ? node1->val : 0;
            val2 = node2 ? node2->val : 0;
            sum = val1 + val2 + carry;
            if(sum > 9) {
                carry = 1;
                sum -= 10;
            }
            else
                carry = 0;
            ListNode* temp = new ListNode(sum);
            node3->next = temp;
            node3 = node3->next;
            if(node1 != nullptr)
                node1 = node1->next;
            if(node2 != nullptr)
                node2 = node2->next;
        }
        
        return l3;
    }
};

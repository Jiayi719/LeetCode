思路：第一种方法两重循环暴力破解，第二种方法利用hash table把数组的元素与其索引存储起来，降低查找target−x的时间复杂度
class Solution {
public:
    /* Brute Force */
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> indices;
        for(int i = 0; i < nums.size() - 1; ++i)
        {
            for(int j = i + 1; j < nums.size(); ++j)
            {
                if(nums[i] + nums[j] == target)
                {
                    indices.push_back(i);
                    indices.push_back(j);
                }
            }
        }
        
        return indices;
    }
    
    /* Hashing */
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> ump;
        vector<int> indices;
        
        for(int i = 0; i < nums.size(); ++i) {
            if(ump.find(target - nums[i]) != ump.end()) {
                indices.push_back(i);
                indices.push_back(ump[target - nums[i]]);
                break;
            }
            else
                ump[nums[i]] = i;
        }
         
        return indices;
    }
};
